<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.1"?>
<plugin>
   <extension
         id="MinPSPScannerConfig"
         name="MinPSPScannerConfig"
         point="org.eclipse.cdt.make.core.ScannerConfigurationDiscoveryProfile">
      <scannerInfoCollector
            class="com.jetdrone.minpsp.managedbuilder.scannerinfo.GCCScannerInfoCollector"
            scope="project">
      </scannerInfoCollector>
      <scannerInfoProvider
            providerId="specsFile">
         <run
               arguments="-E -P -v -dD ${plugin_state_location}/${specs_file}"
               class="com.jetdrone.minpsp.managedbuilder.scannerinfo.SpecsRunSIProvider"
               command="psp-gcc">
         </run>
         <scannerInfoConsoleParser
               class="org.eclipse.cdt.make.internal.core.scannerconfig.gnu.GCCSpecsConsoleParser">
         </scannerInfoConsoleParser>
      </scannerInfoProvider>
   </extension>
      <extension
            point="org.eclipse.cdt.managedbuilder.core.buildDefinitions">
         <managedBuildRevision
               fileVersion="4.0.0">
         </managedBuildRevision>
         <tool
               command="psp-g++"
               id="com.jetdrone.minpsp.managedbuilder.cpp.compiler"
               isAbstract="true"
               name="MinPSP C++ Compiler"
               superClass="cdt.managedbuild.tool.gnu.cpp.compiler">
            <option
                  id="com.jetdrone.minpsp.managedbuilder.compiler.cpp.option.def"
                  isAbstract="false"
                  resourceFilter="all"
                  superClass="gnu.cpp.compiler.option.preprocessor.def"
                  valueType="definedSymbols">
            </option>
            <option
                  category="gnu.cpp.compiler.category.optimization"
                  command="-ffast-math"
                  defaultValue="true"
                  id="com.jetdrone.minpsp.managedbuilder.compiler.cpp.option.fastmath"
                  isAbstract="false"
                  name="fastmath (-ffast-math)"
                  resourceFilter="all"
                  valueType="boolean">
            </option>
            <inputType
                  id="com.jetdrone.minpsp.managedbuilder.compiler.cpp.input"
                  scannerConfigDiscoveryProfileId="com.jetdrone.minpsp.managedbuilder.MinPSPScannerConfig"
                  superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input">
            </inputType>
         </tool>
         <tool
               command="psp-gcc"
               id="com.jetdrone.minpsp.managedbuilder.c.compiler"
               isAbstract="true"
               name="MinPSP C Compiler"
               superClass="cdt.managedbuild.tool.gnu.c.compiler">
            <option
                  id="com.jetdrone.minpsp.managedbuilder.compiler.c.option.def"
                  isAbstract="false"
                  resourceFilter="all"
                  superClass="gnu.c.compiler.option.preprocessor.def.symbols"
                  valueType="definedSymbols">
            </option>
            <option
                  category="gnu.c.compiler.category.optimization"
                  command="-ffast-math"
                  defaultValue="true"
                  id="com.jetdrone.minpsp.managedbuilder.compiler.c.option.fastmath"
                  isAbstract="false"
                  name="fastmath (-ffast-math)"
                  resourceFilter="all"
                  valueType="boolean">
            </option>
            <inputType
                  id="com.jetdrone.minpsp.managedbuilder.compiler.c.input"
                  scannerConfigDiscoveryProfileId="com.jetdrone.minpsp.managedbuilder.MinPSPScannerConfig"
                  superClass="cdt.managedbuild.tool.gnu.c.compiler.input">
            </inputType>
         </tool>
         <tool
               command="psp-g++"
               commandLinePattern="${COMMAND} ${INPUTS} ${FLAGS} ${OUTPUT_FLAG}${OUTPUT_PREFIX}${OUTPUT}"
               id="com.jetdrone.minpsp.managedbuilder.cpp.linker"
               isAbstract="true"
               name="MinPSP C++ Linker"
               natureFilter="ccnature"
               outputFlag="-o">
            <supportedProperties>
               <property
                     id="org.eclipse.cdt.build.core.buildArtefactType">
                  <value
                        id="org.eclipse.cdt.build.core.buildArtefactType.exe">
                  </value>
                                    <value
                        id="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
                  </value>
               </property>
            </supportedProperties>
            <envVarBuildPath
                  pathType="buildpathLibrary"
                  variableList="LIBRARY_PATH">
            </envVarBuildPath>
            <optionCategory
                  id="com.jetdrone.minpsp.managedbuilder.linker.cpp.category.gen"
                  name="General"
                  owner="com.jetdrone.minpsp.managedbuilder.cpp.linker">
            </optionCategory>
            <option
                  category="com.jetdrone.minpsp.managedbuilder.linker.cpp.category.gen"
                  command="-nostartfiles"
                  defaultValue="false"
                  id="com.jetdrone.minpsp.managedbuilder.linker.cpp.option.nostart"
                  name="Do not use standart start files (-nostartfiles)"
                  valueType="boolean">
            </option>
            <option
                  category="com.jetdrone.minpsp.managedbuilder.linker.cpp.category.gen"
                  command="-nodefaultlibs"
                  defaultValue="false"
                  id="com.jetdrone.minpsp.managedbuilder.linker.cpp.option.nodeflibs"
                  name="Do not use default libraries (-nodefaultlibs)"
                  valueType="boolean">
            </option>
            <option
                  category="com.jetdrone.minpsp.managedbuilder.linker.cpp.category.gen"
                  command="-nostdlib"
                  defaultValue="false"
                  id="com.jetdrone.minpsp.managedbuilder.linker.cpp.option.nostdlibs"
                  name="No startup or default libs (-nostdlib)"
                  valueType="boolean">
            </option>
            <option
                  category="com.jetdrone.minpsp.managedbuilder.linker.cpp.category.gen"
                  command="-s"
                  defaultValue="false"
                  id="com.jetdrone.minpsp.managedbuilder.linker.cpp.option.strip"
                  name="Strip symbols (-s)"
                  valueType="boolean">
            </option>
            <optionCategory
                  id="com.jetdrone.minpsp.managedbuilder.linker.cpp.category.other"
                  name="Miscellaneous"
                  owner="com.jetdrone.minpsp.managedbuilder.cpp.linker">
            </optionCategory>
            <option
                  category="com.jetdrone.minpsp.managedbuilder.linker.cpp.category.other"
                  command="-Xlinker ${VALUE}"
                  id="com.jetdrone.minpsp.managedbuilder.linker.cpp.option.other"
                  name="Other options (-Xlinker [option])"
                  valueType="stringList">
            </option>
            <optionCategory
                  id="com.jetdrone.minpsp.managedbuilder.linker.cpp.category.libs"
                  name="Libraries">
            </optionCategory>
            <option
                  browseType="none"
                  category="com.jetdrone.minpsp.managedbuilder.linker.cpp.category.libs"
                  command="-l${VALUE}"
                  id="com.jetdrone.minpsp.managedbuilder.linker.cpp.option.libs"
                  name="Libraries (-l)"
                  valueType="stringList">
            </option>
            <option
                  browseType="directory"
                  category="com.jetdrone.minpsp.managedbuilder.linker.cpp.category.libs"
                  command="-L${VALUE}"
                  id="com.jetdrone.minpsp.managedbuilder.linker.cpp.option.paths"
                  name="Library search path (-L)"
                  valueType="stringList">
            </option>
            <option
                  browseType="file"
                  category="com.jetdrone.minpsp.managedbuilder.linker.cpp.category.other"
                  id="com.jetdrone.minpsp.managedbuilder.linker.cpp.option.userobjs"
                  name="Other objects"
                  valueType="stringList">
            </option>
            <inputType
                  buildVariable="OBJS"
                  dependencyCalculator="org.eclipse.cdt.managedbuilder.makegen.internal.DefaultNoDependencyCalculator"
                  id="com.jetdrone.minpsp.managedbuilder.linker.cpp.input"
                  multipleOfType="true"
                  sourceContentType="org.eclipse.cdt.managedbuilder.core.compiledObjectFile"
                  sources="o">
               <additionalInput
                     kind="additionalinputdependency"
                     paths="$(USER_OBJS)">
               </additionalInput>
               <additionalInput
                     kind="additionalinput"
                     paths="$(LIBS)">
               </additionalInput>
            </inputType>
            <outputType
                  buildVariable="EXECUTABLES"
                  id="com.jetdrone.minpsp.managedbuilder.linker.cpp.output.elf"
                  nameProvider="com.jetdrone.minpsp.make.ProjectNameProvider"
                  outputs="elf"
                  primaryOutput="true">
            </outputType>
         </tool>
         <tool
               command="psp-gcc"
               id="com.jetdrone.minpsp.managedbuilder.c.linker"
               isAbstract="true"
               name="MinPSP C Linker"
               natureFilter="cnature"
               superClass="com.jetdrone.minpsp.managedbuilder.cpp.linker">
         </tool>
         <tool
               command="psp-ar"
               id="com.jetdrone.minpsp.managedbuilder.ar"
               isAbstract="true"
               name="MinPSP Archiver"
               superClass="cdt.managedbuild.tool.gnu.archiver">
         </tool>
         <tool
               command="psp-as"
               id="com.jetdrone.minpsp.managedbuilder.as"
               isAbstract="true"
               name="MinPSP Assembler"
               superClass="cdt.managedbuild.tool.gnu.assembler">
         </tool>
         <toolChain
               archList="all"
               id="com.jetdrone.minpsp.managedbuilder.toolchain.psp.base"
               name="MinPSP Toolchain"
               targetTool="com.jetdrone.minpsp.managedbuilder.ar">
            <targetPlatform
                  archList="all"
                  binaryParser="org.eclipse.cdt.core.ELF"
                  id="com.jetdrone.minpsp.managedbuilder.targetplatform.psp.base"
                  name="Debug Platfom">
            </targetPlatform>
            <builder
                  id="com.jetdrone.minpsp.managedbuilder.builder.psp.base"
                  superClass="cdt.managedbuild.target.gnu.builder">
            </builder>
            <tool
                  id="com.jetdrone.minpsp.managedbuilder.tool.c.compiler.psp.base"
                  isAbstract="false"
                  superClass="com.jetdrone.minpsp.managedbuilder.c.compiler">
            </tool>
            <tool
                  id="com.jetdrone.minpsp.managedbuilder.tool.cpp.compiler.psp.base"
                  isAbstract="false"
                  superClass="com.jetdrone.minpsp.managedbuilder.cpp.compiler">
            </tool>
            <tool
                  id="com.jetdrone.minpsp.managedbuilder.tool.c.linker.psp.base"
                  isAbstract="false"
                  superClass="com.jetdrone.minpsp.managedbuilder.c.linker">
               <enablement
                     type="ALL">
                  <not>
                     <checkBuildProperty
                           property="org.eclipse.cdt.build.core.buildArtefactType"
                           value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                     </checkBuildProperty>
                  </not>
               </enablement>
            </tool>
            <tool
                  id="com.jetdrone.minpsp.managedbuilder.tool.cpp.linker.psp.base"
                  isAbstract="false"
                  superClass="com.jetdrone.minpsp.managedbuilder.cpp.linker">
               <enablement
                     type="ALL">
                  <not>
                     <checkBuildProperty
                           property="org.eclipse.cdt.build.core.buildArtefactType"
                           value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                     </checkBuildProperty>
                  </not>
               </enablement>
            </tool>
            <tool
                  id="com.jetdrone.minpsp.managedbuilder.tool.as.psp.base"
                  isAbstract="false"
                  superClass="com.jetdrone.minpsp.managedbuilder.as">
            </tool>
            <tool
                  id="com.jetdrone.minpsp.managedbuilder.tool.ar.psp.base"
                  isAbstract="false"
                  superClass="com.jetdrone.minpsp.managedbuilder.ar">
               <enablement
                     type="ALL">
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </checkBuildProperty>
               </enablement>
            </tool>
         </toolChain>
         <projectType
               buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
               id="com.jetdrone.minpsp.managedbuilder.lib.psp"
               isAbstract="true"
               name="MinPSP Library">
            <configuration
                  artifactExtension="a"
                  buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
                  cleanCommand="rm -rf"
                  errorParsers="org.eclipse.cdt.core.MakeErrorParser;org.eclipse.cdt.core.GCCErrorParser;org.eclipse.cdt.core.GLDErrorParser;org.eclipse.cdt.core.GASErrorParser"
                  id="com.jetdrone.minpsp.managedbuilder.project.libpsp.debug"
                  name="Debug">
               <toolChain
                     id="com.jetdrone.minpsp.managedbuilder.toolchain.libpsp.debug"
                     isAbstract="false"
                     superClass="com.jetdrone.minpsp.managedbuilder.toolchain.psp.base"
                     targetTool="com.jetdrone.minpsp.managedbuilder.ar">
               </toolChain>
            </configuration>
         </projectType>
      </extension>
      <extension
            point="org.eclipse.cdt.debug.core.CDebugger">
         <debugger
               class="com.jetdrone.minpsp.debugger.GDBDebugger"
               cpu="allegrex"
               id="com.jetdrone.minpsp.managedbuilder.GDBDebugger"
               modes="run"
               name="MinPSP gdbserver Debugger"
               platform="*">
         </debugger>
      </extension>
      <extension
            point="org.eclipse.cdt.debug.ui.CDebuggerPage">
         <debuggerPage
               class="com.jetdrone.minpsp.debugger.GDBDebuggerPage"
               debuggerID="com.jetdrone.minpsp.managedbuilder.GDBDebugger"
               id="com.jetdrone.minpsp.managedbuilder.GDBDebuggerPage">
         </debuggerPage>
      </extension>
      <extension
            point="org.eclipse.cdt.debug.mi.core.commandFactories">
                  <commandFactory
                        class="org.eclipse.cdt.debug.mi.core.command.factories.win32.StandardWinCommandFactory"
                        debuggerID="com.jetdrone.minpsp.managedbuilder.GDBDebugger"
                        id="com.jetdrone.minpsp.managedbuilder.standardCommandFactoryWin32"
                        miVersions="mi,mi1,mi2"
                        name="MinPSP Standard (Windows)"
                        platforms="win32">
                  </commandFactory>
                  <commandFactory
            class="org.eclipse.cdt.debug.mi.core.command.factories.StandardCommandFactory"
            debuggerID="com.jetdrone.minpsp.managedbuilder.GDBDebugger"
            id="com.jetdrone.minpsp.managedbuilder.standardCommandFactory"
            miVersions="mi,mi1,mi2"
            name="MinPSP Standard"
            platforms="*"/>
      </extension>
</plugin>
